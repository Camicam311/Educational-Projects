
/*
 * Generated Sat May 23 00:03:41 PDT 2015
 */


	.section	".rodata"
	.align  	4
.$$.intFmt:
	.asciz  	"%d"
.$$.strFmt:
	.asciz  	"%s"
.$$.strTF:
	.asciz  	"false\0\0\0true"
.$$.strEndl:
	.asciz  	"\n"
.$$.strArrBound:
	.asciz  	"Index value of %d is outside legal range [0,%d).\n"
.$$.strNullPtr:
	.asciz  	"Attempt to dereference NULL pointer.\n"

	.section	".text"
	.align  	4
.$$.printBool:
	save    	%sp, -96, %sp
	set     	.$$.strTF, %o0
	cmp     	%g0, %i0
	be      	.$$.printBool2
	nop
	add     	%o0, 8, %o0
.$$.printBool2:
	call    	printf
	nop
	ret
	restore

.$$.arrCheck:
	save    	%sp, -96, %sp
	cmp     	%i0, %g0
	bl      	.$$.arrCheck2
	nop
	cmp     	%i0, %i1
	bge     	.$$.arrCheck2
	nop
	ret
	restore
.$$.arrCheck2:
	set     	.$$.strArrBound, %o0
	mov     	%i0, %o1
	call    	printf
	mov     	%i1, %o2
	call    	exit
	mov     	1, %o0
	ret
	restore

.$$.ptrCheck:
	save    	%sp, -96, %sp
	cmp     	%i0, %g0
	bne     	.$$.ptrCheck2
	nop
	set     	.$$.strNullPtr, %o0
	call    	printf
	nop
	call    	exit
	mov     	1, %o0
.$$.ptrCheck2:
	ret
	restore


	.section	".bss"
	.align  	4
	.global 	b
b:
	.skip   	8

	.section	".text"
	.align  	4

	.section	".bss"
	.align  	4
	.global 	c
c:
	.skip   	12

	.section	".text"
	.align  	4
	.global 	main
main:
main.void:
	set     	SAVE.main.void, %g1
	save    	%sp, %g1, %sp

		! Store params

		! foreach ( ... )
		! traversal ptr = --array
		set     	b, %o0
		add     	%g0, %o0, %o0
		set     	4, %o1
		sub     	%o0, %o1, %o0
		set     	-64, %o1
		add     	%fp, %o1, %o1
		st      	%o0, [%o1]
	.$$.loopCheck.1:
			! ++traversal ptr
			set     	-64, %o1
			add     	%fp, %o1, %o1
			ld      	[%o1], %o0
			set     	4, %o2
			add     	%o0, %o2, %o0
			st      	%o0, [%o1]
			! traversal ptr < array end addr?
			set     	b, %o0
			add     	%g0, %o0, %o0
			set     	8, %o1
			add     	%o0, %o1, %o1
			set     	-64, %o0
			add     	%fp, %o0, %o0
			ld      	[%o0], %o0
			cmp     	%o0, %o1
			bge     	.$$.loopEnd.1
			nop
			! iterVar = currentElem
			set     	-60, %o1
			add     	%fp, %o1, %o1
			ld      	[%o0], %f0
			fitos   	%f0, %f0
			st      	%f0, [%o1]

			! Start of loop body

				! x = 1
				set     	-60, %o1
				add     	%fp, %o1, %o1
				set     	1, %o0
				set     	-68, %l7
				add     	%fp, %l7, %l7
				st      	%o0, [%l7]
				ld      	[%l7], %f0
				fitos   	%f0, %f0
				st      	%f0, [%o1]

				! break
				ba      	.$$.loopEnd.1
				nop

			! End of loop body
			ba      	.$$.loopCheck.1
			nop
		.$$.loopEnd.1:

		! foreach ( ... )
		! traversal ptr = --array
		set     	c, %o0
		add     	%g0, %o0, %o0
		set     	4, %o1
		sub     	%o0, %o1, %o0
		set     	-76, %o1
		add     	%fp, %o1, %o1
		st      	%o0, [%o1]
	.$$.loopCheck.2:
			! ++traversal ptr
			set     	-76, %o1
			add     	%fp, %o1, %o1
			ld      	[%o1], %o0
			set     	4, %o2
			add     	%o0, %o2, %o0
			st      	%o0, [%o1]
			! traversal ptr < array end addr?
			set     	c, %o0
			add     	%g0, %o0, %o0
			set     	12, %o1
			add     	%o0, %o1, %o1
			set     	-76, %o0
			add     	%fp, %o0, %o0
			ld      	[%o0], %o0
			cmp     	%o0, %o1
			bge     	.$$.loopEnd.2
			nop
			! iterVar = currentElem
			set     	-72, %o1
			add     	%fp, %o1, %o1
			ld      	[%o0], %f0
			st      	%f0, [%o1]

			! Start of loop body

				! x = 2.5
				set     	-72, %o1
				add     	%fp, %o1, %o1

				.section	".rodata"
				.align  	4
			.$$.float.1:
				.single 	0r2.5

				.section	".text"
				.align  	4
				set     	.$$.float.1, %l7
				ld      	[%l7], %f0
				st      	%f0, [%o1]

				! continue
				ba      	.$$.loopCheck.2
				nop

			! End of loop body
			ba      	.$$.loopCheck.2
			nop
		.$$.loopEnd.2:

		! foreach ( ... )
		! traversal ptr = --array
		set     	-56, %o0
		add     	%fp, %o0, %o0
		set     	4, %o1
		sub     	%o0, %o1, %o0
		set     	-84, %o1
		add     	%fp, %o1, %o1
		st      	%o0, [%o1]
	.$$.loopCheck.3:
			! ++traversal ptr
			set     	-84, %o1
			add     	%fp, %o1, %o1
			ld      	[%o1], %o0
			set     	4, %o2
			add     	%o0, %o2, %o0
			st      	%o0, [%o1]
			! traversal ptr < array end addr?
			set     	-56, %o0
			add     	%fp, %o0, %o0
			set     	40, %o1
			add     	%o0, %o1, %o1
			set     	-84, %o0
			add     	%fp, %o0, %o0
			ld      	[%o0], %o0
			cmp     	%o0, %o1
			bge     	.$$.loopEnd.3
			nop
			! iterVar = currentElem
			set     	-80, %o1
			add     	%fp, %o1, %o1
			ld      	[%o0], %o0
			st      	%o0, [%o1]

			! Start of loop body

				! x = true
				set     	-80, %o1
				add     	%fp, %o1, %o1
				set     	1, %o0
				st      	%o0, [%o1]

			! End of loop body
			ba      	.$$.loopCheck.3
			nop
		.$$.loopEnd.3:

		! foreach ( ... )
		! traversal ptr = --array
		set     	b, %o0
		add     	%g0, %o0, %o0
		set     	4, %o1
		sub     	%o0, %o1, %o0
		set     	-92, %o1
		add     	%fp, %o1, %o1
		st      	%o0, [%o1]
	.$$.loopCheck.4:
			! ++traversal ptr
			set     	-92, %o1
			add     	%fp, %o1, %o1
			ld      	[%o1], %o0
			set     	4, %o2
			add     	%o0, %o2, %o0
			st      	%o0, [%o1]
			! traversal ptr < array end addr?
			set     	b, %o0
			add     	%g0, %o0, %o0
			set     	8, %o1
			add     	%o0, %o1, %o1
			set     	-92, %o0
			add     	%fp, %o0, %o0
			ld      	[%o0], %o0
			cmp     	%o0, %o1
			bge     	.$$.loopEnd.4
			nop
			! iterVar = currentElem
			set     	-88, %o1
			add     	%fp, %o1, %o1
			ld      	[%o0], %o0
			st      	%o0, [%o1]

			! Start of loop body

				! x = 5
				set     	-88, %o1
				add     	%fp, %o1, %o1
				set     	5, %o0
				st      	%o0, [%o1]

				! foreach ( ... )
				! traversal ptr = --array
				set     	c, %o0
				add     	%g0, %o0, %o0
				set     	4, %o1
				sub     	%o0, %o1, %o0
				set     	-100, %o1
				add     	%fp, %o1, %o1
				st      	%o0, [%o1]
			.$$.loopCheck.5:
					! ++traversal ptr
					set     	-100, %o1
					add     	%fp, %o1, %o1
					ld      	[%o1], %o0
					set     	4, %o2
					add     	%o0, %o2, %o0
					st      	%o0, [%o1]
					! traversal ptr < array end addr?
					set     	c, %o0
					add     	%g0, %o0, %o0
					set     	12, %o1
					add     	%o0, %o1, %o1
					set     	-100, %o0
					add     	%fp, %o0, %o0
					ld      	[%o0], %o0
					cmp     	%o0, %o1
					bge     	.$$.loopEnd.5
					nop
					! iterVar = currentElem
					set     	-96, %o1
					add     	%fp, %o1, %o1
					ld      	[%o0], %f0
					//why no fitos??
					st      	%f0, [%o1]

					! Start of loop body

						! x = 1.5
						set     	-96, %o1
						add     	%fp, %o1, %o1

						.section	".rodata"
						.align  	4
					.$$.float.2:
						.single 	0r1.5

						.section	".text"
						.align  	4
						set     	.$$.float.2, %l7
						ld      	[%l7], %f0
						st      	%f0, [%o1]

						! (x)==(2.5)
						set     	-96, %l7
						add     	%fp, %l7, %l7
						ld      	[%l7], %f0

						.section	".rodata"
						.align  	4
					.$$.float.3:
						.single 	0r2.5

						.section	".text"
						.align  	4
						set     	.$$.float.3, %l7
						ld      	[%l7], %f1
						fcmps   	%f0, %f1
						nop
						fbne    	.$$.cmp.1
						mov     	%g0, %o0
						inc     	%o0
					.$$.cmp.1:
						set     	-104, %o1
						add     	%fp, %o1, %o1
						st      	%o0, [%o1]

						! if ( (x)==(2.5) )
						set     	-104, %l7
						add     	%fp, %l7, %l7
						ld      	[%l7], %o0
						cmp     	%o0, %g0
						be      	.$$.else.1
						nop

							ba      	.$$.endif.1
							nop

						! else
					.$$.else.1:

						! endif
					.$$.endif.1:

					! End of loop body
					ba      	.$$.loopCheck.5
					nop
				.$$.loopEnd.5:

			! End of loop body
			ba      	.$$.loopCheck.4
			nop
		.$$.loopEnd.4:

		! foreach ( ... )
		! traversal ptr = --array
		set     	-16, %o0
		add     	%fp, %o0, %o0
		set     	4, %o1
		sub     	%o0, %o1, %o0
		set     	-112, %o1
		add     	%fp, %o1, %o1
		st      	%o0, [%o1]
	.$$.loopCheck.6:
			! ++traversal ptr
			set     	-112, %o1
			add     	%fp, %o1, %o1
			ld      	[%o1], %o0
			set     	4, %o2
			add     	%o0, %o2, %o0
			st      	%o0, [%o1]
			! traversal ptr < array end addr?
			set     	-16, %o0
			add     	%fp, %o0, %o0
			set     	16, %o1
			add     	%o0, %o1, %o1
			set     	-112, %o0
			add     	%fp, %o0, %o0
			ld      	[%o0], %o0
			cmp     	%o0, %o1
			bge     	.$$.loopEnd.6
			nop
			! iterVar = currentElem
			set     	-108, %o1
			add     	%fp, %o1, %o1
			st      	%o0, [%o1]

			! Start of loop body

			! End of loop body
			ba      	.$$.loopCheck.6
			nop
		.$$.loopEnd.6:

		! return 0;
		set     	0, %i0
		call    	main.void.fini
		nop
		ret
		restore

	! End of function main.void
	call    	main.void.fini
	nop
	ret
	restore
	SAVE.main.void = -(92 + 112) & -8

main.void.fini:
	save    	%sp, -96, %sp
	ret
	restore
